add_integer.py
defines add_integer(a, b=98)

Usage 
add_integer(...)
'add_integer(a, b=98)' adds two integers and returns the sum

import add_integer from 0-add_integer
	add_integer = __import__('0-add_integer').add_integer

	>>> add_integer(2, 1)
	3

Tests

Works with positive negative values
	>>> add_integer(100, -2)
	98

::
Works with negative values
	>>> add_integer(-2, -1)
	-3

::
Works with floating point values
	>>> add_integer(100.3, -2)
	98

	>>> add_integer(5.3, 4.2)
	9.5

	>>> add_integer(-5.3, -4.2)
	-9.5


>>> add_integer(0, 98)
98

>>> add_integer(100.3, 0)
100.3

"a" and "b" must be integers or floats
	>>> add_integer(4, "School")
	Traceback (most recent call last):
	TypeError: b must be an integer


	>>> add_integer("Best", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer


	>>> add_integer("Best", "School")
	Traceback (most recent call last):
	TypeError: a must be an integer

fails if nothing is passed
	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer


	>>> add_integer(1, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

Fails if NaN is passed
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float Nan to integer


Fails if infinity value is passed
	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer
